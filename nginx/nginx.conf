upstream backend {
    server backend:8000;
}
upstream frontend {
    server frontend:3000;
}
server {
    listen 80;
    listen [::]:80;
#     root /var/www/frontend;
#     location ~* (service-worker\.js)$ {
#         add_header ‘Cache-Control’ ‘no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0’;
#         expires off;
#         proxy_no_cache 1;
#     }
# 요청받은 uri로 연결 eg) http://127.0.0.1/login
    location /api/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_connect_timeout 300s;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
        proxy_pass http://backend;
         add_header ‘Access-Control-Allow-Origin’ ‘$http_origin’ always;
        add_header ‘Access-Control-Allow-Methods’ ‘GET, POST, OPTIONS’;
        add_header ‘Access-Control-Allow-Headers’ ‘DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range’;
        add_header ‘Access-Control-Expose-Headers’ ‘Content-Length,Content-Range’;
    }
    location / {
#          index  index.html index.htm;
#         try_files $uri $uri/ /index.html;
        proxy_pass http://frontend;
        add_header ‘Access-Control-Allow-Origin’ ‘$http_origin’ always;
        add_header ‘Access-Control-Allow-Methods’ ‘GET, POST, OPTIONS’;
        add_header ‘Access-Control-Allow-Headers’ ‘DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range’;
        add_header ‘Access-Control-Expose-Headers’ ‘Content-Length,Content-Range’;
    }
 }