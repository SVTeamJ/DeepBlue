version: "3"

services:
  ## TODO 기본 틀만 잡았으며 추후에 수정 예정
  # ai:
  #   container_name: ai
  #   build:
  #     context: ./ai
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8001:8001"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    tty: true
    networks:
      - mynet
  mysql:
    container_name: deepBlue_mysql
    #    image: mysql:8.0-oracle
    build:
      context: ./db
      dockerfile: Dockerfile
    volumes:
      - mysql_data_dev:/mysql
    #    env_file:
    #      - ./.env
    networks:
      - mynet
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    container_name: backend
    build: ./backend
    entrypoint: /bin/bash
    command: -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --reload"
    ports:
      - 8000:8000
    networks:
      - mynet
    # 작업이 끝나도 종료되지 않게 하는 명령
    tty: true
    depends_on:
      mysql:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - mynet
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - mynet
  grafana:
    image: grafana/grafana
    ports:
      - 3001:3000
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    platform: linux/amd64
    container_name: cadvisor
    ports:
      - 8081:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      - mynet
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - mynet
volumes:
  mysql_data_dev: null

networks:
  mynet:
    driver: bridge
